@page "/Account/Register"
@layout Layout.WaAuthLayout
@using Microsoft.AspNetCore.Identity
@using WarriorExperiment.Persistence.Entities
@using System.ComponentModel.DataAnnotations
@inject SignInManager<WaUser> SignInManager
@inject UserManager<WaUser> UserManager
@inject NavigationManager Navigation
@inject IHttpContextAccessor HttpContextAccessor

<PageTitle>Register - Warrior Experiment</PageTitle>

<div class="wa-register-container">
    <div class="wa-register-card">
        <h3 class="wa-register-title">Join Warrior Experiment</h3>
        
        <form method="post" action="/Account/ProcessRegister" class="wa-register-form">
            <AntiforgeryToken />
            
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="wa-error-message">@errorMessage</div>
            }
            
            @if (!string.IsNullOrEmpty(successMessage))
            {
                <div class="wa-success-message">@successMessage</div>
            }
            
            <div class="wa-form-field">
                <label for="displayName">Display Name</label>
                <input type="text" 
                       id="displayName" 
                       name="DisplayName"
                       placeholder="Enter your display name"
                       class="wa-input" 
                       required />
            </div>
            
            <div class="wa-form-field">
                <label for="username">Username</label>
                <input type="text" 
                       id="username" 
                       name="Username"
                       placeholder="Enter your username"
                       class="wa-input" 
                       required />
            </div>
            
            <div class="wa-form-field">
                <label for="password">Password</label>
                <input type="password" 
                       id="password" 
                       name="Password"
                       placeholder="Enter your password"
                       class="wa-input" 
                       required />
            </div>
            
            <div class="wa-form-field">
                <label for="confirmPassword">Confirm Password</label>
                <input type="password" 
                       id="confirmPassword" 
                       name="ConfirmPassword"
                       placeholder="Confirm your password"
                       class="wa-input" 
                       required />
            </div>
            
            <div class="wa-register-buttons">
                <button type="submit" class="wa-register-button">
                    <span class="button-icon">ðŸ‘¤</span>
                    Register
                </button>
                
                <a href="/Account/Login" class="wa-login-button">
                    <span class="button-icon">ðŸ”‘</span>
                    Back to Login
                </a>
            </div>
        </form>
    </div>
</div>

@code {
    [SupplyParameterFromQuery]
    public string? Error { get; set; }

    [SupplyParameterFromQuery]
    public string? Details { get; set; }

    private string? errorMessage;
    private string? successMessage;

    protected override async Task OnInitializedAsync()
    {
        // If user is already authenticated, redirect to home
        if (SignInManager.IsSignedIn(HttpContextAccessor.HttpContext?.User))
        {
            Navigation.NavigateTo("/", forceLoad: true);
        }

        // Handle error messages from controller redirects
        if (!string.IsNullOrEmpty(Error))
        {
            errorMessage = Error switch
            {
                "validation" => "Please check your input and try again.",
                "username-exists" => "Username already exists. Please choose a different username.",
                "identity" => !string.IsNullOrEmpty(Details) ? 
                              $"Registration failed: {Uri.UnescapeDataString(Details)}" : 
                              "Registration failed due to identity errors.",
                "exception" => "An error occurred during registration. Please try again.",
                _ => "Registration failed. Please try again."
            };
        }
    }
}

<style>
    .wa-register-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 80vh;
        padding: 2rem;
    }
    
    .wa-register-card {
        width: 100%;
        max-width: 400px;
        padding: 2rem;
        background: var(--rz-surface-100);
        border: 1px solid var(--rz-border-color);
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
    
    .wa-register-title {
        text-align: center;
        margin-bottom: 2rem;
        color: var(--rz-primary);
        font-size: 1.5rem;
        font-weight: 600;
    }
    
    .wa-register-form {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }
    
    .wa-form-field {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }
    
    .wa-form-field label {
        font-weight: 500;
        color: var(--rz-text-color);
        font-size: 0.9rem;
    }
    
    .wa-input {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid var(--rz-border-color);
        border-radius: 4px;
        background: var(--rz-surface-0);
        color: var(--rz-text-color);
        font-size: 1rem;
        transition: border-color 0.2s;
    }
    
    .wa-input:focus {
        outline: none;
        border-color: var(--rz-primary);
        box-shadow: 0 0 0 2px rgba(var(--rz-primary-rgb), 0.2);
    }
    
    .wa-register-buttons {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        margin-top: 1rem;
    }
    
    .wa-register-button {
        width: 100%;
        min-height: 48px;
        background: var(--rz-primary);
        color: white;
        border: none;
        border-radius: 4px;
        font-size: 1rem;
        font-weight: 500;
        cursor: pointer;
        transition: background-color 0.2s;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }
    
    .wa-register-button:hover {
        background: var(--rz-primary-dark, var(--rz-primary));
        opacity: 0.9;
    }
    
    .wa-login-button {
        width: 100%;
        min-height: 48px;
        background: transparent;
        color: var(--rz-primary);
        border: 1px solid var(--rz-primary);
        border-radius: 4px;
        font-size: 1rem;
        font-weight: 500;
        text-decoration: none;
        cursor: pointer;
        transition: background-color 0.2s;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }
    
    .wa-login-button:hover {
        background: var(--rz-primary);
        color: white;
    }
    
    .button-icon {
        font-size: 1.1rem;
    }
    
    .wa-error-message {
        padding: 1rem;
        background: #fee;
        border: 1px solid #fcc;
        border-radius: 4px;
        color: #c33;
        margin-bottom: 1rem;
        text-align: center;
    }
    
    .wa-success-message {
        padding: 1rem;
        background: #efe;
        border: 1px solid #cfc;
        border-radius: 4px;
        color: #3c3;
        margin-bottom: 1rem;
        text-align: center;
    }
    
    .wa-validation-message {
        color: #c33;
        font-size: 0.85rem;
        margin-top: 0.25rem;
        display: block;
    }
    
    .wa-register-button:disabled {
        opacity: 0.6;
        cursor: not-allowed;
    }
</style>